# ~/.config/sway/config
# My configuration for sway
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term urxvt
set $term termite
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font 'Noto Sans 12'
set $menu wofi -I -i --show drun

# set $passmenu passmenu -fn "pango:DejaVu Sans 12":
set $passmenu rofi-pass -fn "pango:Noto Sans 12":

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output eDP-1 bg /usr/share/backgrounds/adapta/suna.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output eDP-1 scale 2 resolution 3200x1800
exec_always bash -c "killall kanshi; kanshi"

### Idle configuration
#

exec swayidle -w \
         timeout 300 'swaylock-blur --blur-sigma 40 -- -f' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock-blur --blur-sigma 40 -- -f'

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input 1:1:AT_Translated_Set_2_keyboard {
    xkb_layout de,es
    xkb_variant ,nodeadkeys
    xkb_options grp:alt_shift_toggle
}

input 1133:45849:Logitech_K810_Keyboard {
    xkb_layout de,es
    xkb_variant ,nodeadkeys
    xkb_options grp:alt_shift_toggle
}

input 1739:30381:DLL0665:01_06CB:76AD_Touchpad {
    natural_scroll enabled
    middle_emulation enabled
    scroll_method two_finger
    accel_profile adaptive
    drag enabled
    dwt enable
    tap enable
    tap_button_map lrm
    click_method clickfinger
}

input 1267:8400:ELAN_Touchscreen {

}

### Focus
focus_follows_mouse no
seat seat0 hide_cursor 10000

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+p exec $passmenu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+Shift+a focus child

    # Make screenshots: (requires grim)
    # - Of the whole screen
    bindsym Print exec grim $(xdg-user-dir PICTURES)/Screenshot-$(date +'%Y-%m-%d-%H%M%S_grim.png')
    # - Of selected area (requires slurp)
    bindsym Shift+Print exec grim -g "$(slurp)" $(xdg-user-dir PICTURES)/Screenshot-$(date +'%Y-%m-%d-%H%M%S_grim.png')

# ------------------------------------------
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# ------------------------------------------
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# ------------------------------------------
# System control (Logout, shutdown, etc)
set $lock swaylock-blur --blur-sigma 40 -- -f
set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI

mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

# Notifications
bindsym $mod+n mode notifications
mode notifications {
	bindsym Escape mode default
	bindsym Return exec makoctl invoke; exec makoctl dismiss; mode default
	bindsym d exec makoctl dismiss; mode default
	bindsym Shift+d exec makoctl dismiss -a; mode default
}

# ------------------------------------------
# Brightness controls
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob
bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob

# ------------------------------------------
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym --locked XF86AudioMute exec --no-startup-id pactl set-sink-mute 1 toggle # mute sound

# ------------------------------------------
# Media player controls (make the multimedia keys also work when locked)
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioPause exec playerctl pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous

# ------------------------------------------
# Set floating windows
# swaymsg -t get_tree
for_window [app_id="evolution" title="Nachricht verfassen"] floating enable
for_window [app_id="evolution" title="Re:*"] floating enable
for_window [app_id="evolution" title="Fw:*"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="gnote"] floating enable
# For nmguish (networkmanaker gui)
for_window [app_id="yad"] floating enable; resize set width 720 height 300
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="gnome-power-statistics"] floating enable
for_window [app_id="gnome-system-monitor"] floating enable
for_window [app_id="org.gnome.Weather"] floating enable
for_window [app_id="blueberry.py"] floating enable; resize set height 760

# ------------------------------------------
# Window aspect
default_border pixel 5
default_floating_border pixel 5
hide_edge_borders smart

gaps inner 6
smart_gaps on

# class        border  backgr. text    indicator child_border
client.focused #859900 #859900 #fdf6e3 #268bd2 #859900

# ------------------------------------------
# Status Bar: Waybar
# Read `man 5 sway-bar` for more information about this section.

bar {
    swaybar_command waybar
}

# Never give focus to waybar
no_focus [app_id="waybar"]
# Fix positioning of tooltips
for_window [app_id="waybar" floating] {
    move position cursor
    move down 60px # adjust if some menus still don't fit
}

include /etc/sway/config.d/*

# ------------------------------------------
# Start at boot
exec_always mako
exec --no-startup-id redshift -m wayland
# Always mute mic at boot
exec --no-startup-id pactl set-source-mute alsa_input.pci-0000_00_1b.0.analog-stereo 1

# exec --no-startup-id "eval `ssh-agent -s -t 6000`"
# exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec startup sway
